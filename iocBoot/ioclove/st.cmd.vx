
#=============================================================================
# vxWorks-based IOC STARTUP SCRIPT

#-----------------------------------------------------------------------------
# Load commands
cd ""
#< ../nfsCommands
< cdCommands

#-----------------------------------------------------------------------------
# If the VxWorks kernel was built using the project facility, the following
# must be added before any C++ code is loaded (see SPR #28980).
sysCplusEnable=1

#-----------------------------------------------------------------------------
# Load custom EPICS software from user tree and from share
cd topbin
ld < loveApp.munch
cd startup

#-----------------------------------------------------------------------------
# Configure components

#-----------------------------------------------------------------------------
# IPAC (2.8)
# Carrier contents
#   slot a: IP-Octal (serial RS-485)
#   slot b: empty
#   slot c: empty
#   slot d: empty
# Initialize IP carrier: "A16,A32" addresses
ipacAddVIPC616_01( "0x2000,0xA0000000" )

#-----------------------------------------------------------------------------
# Initialize SBS OctalUart IP module

# Indicate number of modules to support
tyGSOctalDrv(4)

# Initialize module: module type, IRQ, carrier, slot
tyIdx = tyGSOctalModuleInit( "Mod", "RS485", 0x80, 0, 0 )

# Create device: name, module#, port#, rdbuf, wrbuf
tyDev = tyGSOctalDevCreate( "/dev/ttyS0", "Mod", 0, 1000, 1000 )

# Configure the port
tyGSOctalConfig( "/dev/ttyS0", 9600, 'N', 1, 8, 'N' )

#-----------------------------------------------------------------------------
# Configure ASYN
drvAsynSerialPortConfigure( "L0", "/dev/ttyS0", 0, 0, 0 )
asynSetOption( "L0", 0, "baud",    "9600" )
asynSetOption( "L0", 0, "bits",    "8" )
asynSetOption( "L0", 0, "parity",  "none" )
asynSetOption( "L0", 0, "stop",    "1" )
asynSetOption( "L0", 0, "clocal",  "Y" )
asynSetOption( "L0", 0, "crtscts", "N" )

# ASYN trace masks
asynSetTraceMask( "L0", 0, 0x9 )
asynSetTraceIOMask( "L0", 0, 0x1 )

#-----------------------------------------------------------------------------
# Love controllers port driver
interposeLovelink( "L0", 0 )
interposeLovelinkReport( 1 )

#-----------------------------------------------------------------------------
# Load database
cd top
dbLoadDatabase( "dbd/loveAppVX.dbd" )
loveAppVX_registerRecordDeviceDriver(pdbbase)

#-----------------------------------------------------------------------------
# Load records
dbLoadRecords( "$(ASYN)/db/asynRecord.db","P=lov,R=PortL0,PORT=L0,ADDR=0,OMAX=0,IMAX=0" )
dbLoadRecords( "db/devAsynLove.db", "P=lov1,MODEL=1600,PORT=L0,ADDR=0x01" )
dbLoadRecords( "db/devAsynLove.db", "P=lov2,MODEL=1600,PORT=L0,ADDR=0x02" )
dbLoadRecords( "db/devAsynLove.db", "P=lov3,MODEL=1600,PORT=L0,ADDR=0x03" )
dbLoadRecords( "db/devAsynLove.db", "P=lov4,MODEL=16A,PORT=L0,ADDR=0x04"  )

#-----------------------------------------------------------------------------
# Start IOC
iocInit()

#
#=============================================================================

